(program
  (let
    (nonrec)
    (termbind
      (strict)
      (vardecl idFun (all a (type) (fun a a)))
      (abs a (type) (lam x a x))
    )
    (termbind
      (strict)
      (vardecl addInteger (fun (con integer) (fun (con integer) (con integer))))
      (builtin addInteger)
    )
    (termbind
      (strict)
      (vardecl addInteger (fun (con integer) (fun (con integer) (con integer))))
      (lam x (con integer) (lam y (con integer) [ [ addInteger x ] y ]))
    )
    [
      [ addInteger [ { idFun (con integer) } (con integer 3) ] ]
      [ { idFun (con integer) } (con integer 3) ]
    ]
  )
)